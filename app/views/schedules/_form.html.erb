<style>
    #panel {
        z-index: 5;
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
    }
        /*Fix bug Twitter Bootstrap CSS affecting Google Maps*/
    #map-canvas img {
        max-width: none;
    }
</style>
<script src="http://maps.googleapis.com/maps/api/js?key=AIzaSyC7icpVNHCpzkJjilXkACn8VG9HlSe0u3s&sensor=false"></script>
<script>
    var directionsDisplay;
    var directionsService = new google.maps.DirectionsService();
    var mapCanvas;
    var rendererOptions = {
        suppressMarkers : true
    }

    var stepDisplay;
    var markerArray = [];

    function initialize() {

        directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);

        // Instantiate an info window to hold step text.
        stepDisplay = new google.maps.InfoWindow();

        var latlng = new google.maps.LatLng(21.0333333, 105.85000000000002);
        var mapOptions = {
            zoom: 6,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            center: latlng
        }
        mapCanvas = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
        directionsDisplay.setMap(mapCanvas);
    }

    function calcRoute() {

        // First, remove any existing markers from the map.
        for (i = 0; i < markerArray.length; i++) {
            markerArray[i].setMap(null);
        }

        // Now, clear the array itself.
        markerArray = [];

        var start = document.getElementById('start').value;
        var end = document.getElementById('end').value;
        var waypts = [];
        var checkboxArray = document.getElementById('waypoints');
        for (var i = 0; i < checkboxArray.length; i++) {
            if (checkboxArray.options[i].selected == true) {
                waypts.push({
                    location:checkboxArray[i].value,
                    stopover:true});
            }
        }

        var request = {
            origin: start,
            destination: end,
            waypoints: waypts,
            optimizeWaypoints: true,
            travelMode: google.maps.TravelMode.DRIVING
        };
        directionsService.route(request, function(response, status) {
            if (status == google.maps.DirectionsStatus.OK) {
                directionsDisplay.setDirections(response);
                showSteps(response);
                var route = response.routes[0];
                var summaryPanel = document.getElementById('directions_panel');
                summaryPanel.innerHTML = '';
                // For each route, display summary information.
                for (var i = 0; i < route.legs.length; i++) {
                    var routeSegment = i + 1;
                    summaryPanel.innerHTML += '<b>Route Segment: ' + routeSegment + '</b><br>';
                    summaryPanel.innerHTML += route.legs[i].start_address + ' to ';
                    summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
                    summaryPanel.innerHTML += route.legs[i].distance.text + '<br>';
                    summaryPanel.innerHTML += route.legs[i].duration.text + '<br><br>';
                }
            }
        });

    }

    function showSteps(directionResult) {
        // For each step, place a marker, and add the text to the marker's
        // info window. Also attach the marker to an array so we
        // can keep track of it and remove it when calculating new
        // routes.
//        var myRoute = directionResult.routes[0].legs[0];
//
//        for (var i = 0; i < myRoute.steps.length; i++) {
//            var icon = "https://chart.googleapis.com/chart?chst=d_map_pin_letter&chld=" + i + "|FF0000|000000";
//            if (i == 0) {
//                icon = "https://chart.googleapis.com/chart?chst=d_map_xpin_icon&chld=pin_star|car-dealer|00FFFF|FF0000";
//            }
//            var marker = new google.maps.Marker({
//                position: myRoute.steps[i].start_point,
//                map: mapCanvas,
//                icon: icon
//            });
//            attachInstructionText(marker, myRoute.steps[i].instructions);
//            markerArray.push(marker);
//        }
//        var marker = new google.maps.Marker({
//            position: myRoute.steps[i - 1].end_point,
//            map: mapCanvas,
//            icon: "https://chart.googleapis.com/chart?chst=d_map_pin_icon&chld=flag|ADDE63"
//        });

        var myRoute = directionResult.routes[0];

        for (var i = 0; i < myRoute.legs.length; i++) {
            var icon = "https://chart.googleapis.com/chart?chst=d_map_pin_letter&chld=" + i + "|FF0000|000000";
            if (i == 0) {
                icon = "https://chart.googleapis.com/chart?chst=d_map_xpin_icon&chld=pin_star|car-dealer|00FFFF|FF0000";
            }
            var marker = new google.maps.Marker({
                position: myRoute.legs[i].start_location,
                map: mapCanvas,
                icon: icon
            });
            attachInstructionText(marker, myRoute.legs[i].start_address);
            markerArray.push(marker);
        }
        var marker = new google.maps.Marker({
            position: myRoute.legs[myRoute.legs.length - 1].end_location,
            map: mapCanvas,
            icon: "https://chart.googleapis.com/chart?chst=d_map_pin_icon&chld=flag|ADDE63"
        });
            markerArray.push(marker);

        google.maps.event.trigger(markerArray[0], "click");
    }

    function attachInstructionText(marker, text) {
        google.maps.event.addListener(marker, 'click', function() {
            // Open an info window when the marker is clicked on,
            // containing the text of the step.
            stepDisplay.setContent(text);
            stepDisplay.open(mapCanvas, marker);
        });
    }

    google.maps.event.addDomListener(window, 'load', initialize);

</script>
</head>
<body>
<div id="map-canvas" style="width:500px;height:380px;"></div>
<div id="control_panel" style="float:right;width:30%;text-align:left;padding-top:20px">
  <div style="margin:20px;border-width:2px;">
    <b>Start:</b>
    <select id="start">
      <option value="Ha Noi">Ha Noi</option>
    </select>
    <br>
    <b>Waypoints:</b> <br>
    <i>(Ctrl-Click for multiple selection)</i> <br>
    <select multiple id="waypoints">
      <option value="Ninh Binh">Ninh Binh</option>
      <option value="Thanh Hoa">Thanh Hoa</option>
      <option value="Nghe An">Nghe An</option>
      <option value="Hue">Hue</option>



    </select>
    <br>
    <b>End:</b>
    <select id="end">
      <option value="Da Nang">Da Nang</option>
      <option value="Ho Chi Minh">Ho Chi Minh</option>
    </select>
    <br>
    <input type="submit" onclick="calcRoute();">
  </div>
  <div id="directions_panel" style="margin:20px;background-color:#FFEE77;"></div>
</div>

<%= simple_form_for(@schedule) do |f| %>
  <% if @schedule.errors.any? %>
        <%= f.error_notification %>
        <%= display_base_errors @schedule %>
  <% end %>
    <%= f.input :average_meeting_duration, :autofocus => true %>
    <%= f.input :start_time ,:as=>:datetimepicker %>

    <%= f.input :end_time,:as => :datepicker %>
    <%= f.input :transport %>
    <%= f.input :speed %>
    <%= f.input :hq_location_id %>
    <%= f.input :ending_location_id %>
    <%= f.input :schedule_date, :as => :datepicker %>
    <%= f.button :submit, :class => 'btn-primary' %>
<% end %>

<script>
//    $(document).ready(function() {
//        $("#schedule_start_time").datepicker();
//        $("#schedule_schedule_date").datepicker();
//    });
$(function() {
    $("input.datetimepicker").each(function(i) {
        return $(this).datetimepicker({
            dateFormat: "yy-mm-dd",
            timeFormat: "hh:mm tt"
        });
    });
    $("input.datepicker").each(function(i) {
        return $(this).datepicker({
            altFormat: "yy-mm-dd",
            dateFormat: "mm/dd/yy",
            altField: $(this).next()
        });
    });
});
</script>
